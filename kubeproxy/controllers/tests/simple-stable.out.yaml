apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addons.x-k8s.io/kubeproxy: default
    k8s-app: kubeproxy
  name: kube-proxy

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    addons.x-k8s.io/kubeproxy: default
    k8s-app: kubeproxy
  name: system:kube-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node-proxier
subjects:
- kind: ServiceAccount
  name: kube-proxy
  namespace: kube-system

---

apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  annotations: null
  labels:
    addons.x-k8s.io/kubeproxy: default
    k8s-app: kubeproxy
  name: kube-proxy
  namespace: kube-system
spec:
  assemblyPhase: Pending
  componentGroupKinds:
  - group: app.k8s.io
    kind: Application
  - group: rbac.authorization.k8s.io
    kind: ClusterRoleBinding
  - group: apps
    kind: DaemonSet
  - group: ""
    kind: ServiceAccount
  descriptor:
    description: |
      The Kubernetes network proxy runs on each node.
      This reflects services as defined in the Kubernetes API on
       each node and can do simple TCP, UDP, and SCTP stream forwarding
       or round robin TCP, UDP, and SCTP forwarding across a set of
       backends. Service cluster IPs and ports are currently found through
       Docker-links-compatible environment variables specifying ports opened
       by the service proxy.
    icons:
    - src: https://github.com/kubernetes/kubernetes/raw/master/logo/logo.png
      type: image/png
    keywords:
    - addon
    - proxy
    links:
    - description: Project Homepage
      url: https://github.com/kubernetes/kubernetes
    type: kube-proxy
    version: ""
  selector:
    matchLabels:
      addons.x-k8s.io/kubeproxy: default

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addons.x-k8s.io/kubeproxy: default
    k8s-app: kubeproxy
  name: kube-proxy
spec:
  selector:
    matchLabels:
      k8s-app: kube-proxy
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: kube-proxy
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - kube-proxy --resource-container="" --oom-score-adj=-998 --v=2 --iptables-sync-period=1m
          --iptables-min-sync-period=10s --ipvs-sync-period=1m --ipvs-min-sync-period=10s
          --cluster-cidr=192.168.0.0/16
        env:
        - name: KUBERNETES_SERVICE_HOST
          value: kubernetes-master
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        image: registry.k8s.io/kube-proxy:v1.15.0
        name: kube-proxy
        resources:
          requests:
            cpu: 50m
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/log
          name: varlog
          readOnly: false
        - mountPath: /run/xtables.lock
          name: xtables-lock
          readOnly: false
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
      dnsPolicy: Default
      hostNetwork: true
      priorityClassName: system-node-critical
      serviceAccountName: kube-proxy
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - hostPath:
          path: /lib/modules
        name: lib-modules
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
